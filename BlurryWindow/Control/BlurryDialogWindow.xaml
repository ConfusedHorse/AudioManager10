<Window x:Class="BlurryControls.Control.BlurryDialogWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:p="clr-namespace:BlurryControls.Properties"
        mc:Ignorable="d" 
        Height="250" Width="500"
		Background="#AF000000"
        Foreground="#FFFFFFFF"
		AllowsTransparency="True"
		WindowStyle="None"
        ShowInTaskbar="False" 
        Topmost="True"
		Loaded="Window_Loaded"
        WindowStartupLocation="CenterOwner"
        d:DataContext="{d:DesignData BlurryWindow}" 
        x:ClassModifier="internal">
    <!-- 
    the following definition represents an implementation which is similar to the native windows
    MessageBox control. it contains a visual definition for a caption, an icon which is arranged 
    in the content area, a prompt to the user and a dynamic set of buttons which provide options
    for a used to answer the prompt
    -->

    <Window.Resources>
        <!-- style for a button which slowly turns white when hovering the cursor over it -->
        <Style x:Key="WindowButtonGeneralStyle" 
               TargetType="{x:Type Button}" 
               BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="48"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#66FFFFFF"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#00000000"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="Stop" 
                                            Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- style for a wider button which slowly turns white when hovering the cursor over it -->
        <Style x:Key="WindowButtonDialogStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonGeneralStyle}">
            <Setter Property="Width" Value="128"/>
            <Setter Property="Margin" Value="10 0"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <!-- style for a button which slowly turns red when hovering the cursor over it -->
        <Style x:Key="WindowButtonExitStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonGeneralStyle}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#AAFF0000"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#00000000"
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="Stop" 
                                            Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- style for a centered image of size 16 -->
        <Style x:Key="WindowImageStyle" TargetType="Image">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="16"/>
        </Style>

        <!-- style for a TextBlock to show a dialog content -->
        <Style x:Key="DialogTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
    </Window.Resources>

    <!-- 
    the border is important because the window gets "lost" on single 
    colored backgrounds due to its transparent appearance
    -->
    <Border BorderThickness="1"
            BorderBrush="White">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- MenuBar with animated background, close button, an image (not set) and a caption -->
            <Grid x:Name="MenuBar"
                  Grid.Row="0"
                  Height="37"
                  Background="#00000000"
                  HorizontalAlignment="Stretch"
                  MouseLeftButtonDown="MenuBar_OnMouseLeftButtonDown">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#66000000"
                                                Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" 
                                                FillBehavior="HoldEnd" 
                                                Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Grid.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#00000000"
                                                Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" 
                                                FillBehavior="Stop" 
                                                Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="53"/>
                </Grid.ColumnDefinitions>

                <StackPanel x:Name="LeftPanel"
                            Grid.Column="0"
                            Margin="5,5,0,0"
                            VerticalAlignment="Stretch"
                            Orientation="Horizontal">

                    <Image x:Name="TitleImage"
                           Margin="2 2 6 6"
                           Height="24"
                           Width="24"/>
                </StackPanel>

                <TextBlock x:Name="TitleTextBlock"
                           Grid.Column="1"
                           Margin="0 5"
                           Background="Transparent"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontSize="20"
                           FontFamily="Segoe UI"
                           Foreground="White"/>

                <StackPanel x:Name="RightPanel"
                            Grid.Column="2"
                            Margin="0 5 5 0"
                            VerticalAlignment="Stretch"
                            Orientation="Horizontal">

                    <Button x:Name="CloseButton"
                            Style="{StaticResource WindowButtonExitStyle}"
                            ToolTip="{x:Static p:Resources.Close}"
                            Click="CloseButton_OnClick">
                        <Image Style="{StaticResource WindowImageStyle}"
                               Source="../Resources/Icons/032/close.png"/>
                    </Button>
                </StackPanel>
            </Grid>

            <Grid x:Name="ContentGrid"
                  Grid.Row="1">
                <Grid Margin="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="128"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- an icon which is chosen from a preset to optically specify the prompt -->
                    <Image x:Name="ContentImage" 
                           VerticalAlignment="Center"
                           Height="64"
                           Width="64"
                           Margin="16 -32 32 0"/>

                    <!-- 
                    here goes the user prompt 
                    if the text exceeds the boundaries of the TextBlock control
                    a vertical ScrollBar is provided
                    -->
                    <ScrollViewer Grid.Column="1"
                                  VerticalAlignment="Center"
                                  VerticalScrollBarVisibility="Auto">
                        <TextBlock x:Name="DialogMessageTextBlock"
                                   Style="{StaticResource DialogTextBlockStyle}"
                                   TextWrapping="WrapWithOverflow"/>
                    </ScrollViewer>
                </Grid>
            </Grid>

            <!-- 
            area with animated background and a set of the following buttons
                _Yes
                _No
                _Ok
                _Cancel
            
            the composition of buttons is limited by the enum BlurryDialogButton
            -->
            <Grid x:Name="ButtonGrid"
                  Grid.Row="2"
                  Height="42"
                  Background="#00000000"
                  HorizontalAlignment="Stretch"
                  MouseLeftButtonDown="MenuBar_OnMouseLeftButtonDown">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#66000000"
                                                Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" 
                                                FillBehavior="HoldEnd" 
                                                Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Grid.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#00000000"
                                                Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" 
                                                FillBehavior="Stop" 
                                                Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>

                <StackPanel x:Name="ButtonPanel"
                            Margin="0 5"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                    <!-- Yes -->
                    <Button x:Name="YesButton"
                            Style="{StaticResource WindowButtonDialogStyle}"
                            Click="YesButton_OnClick">
                        <TextBlock Style="{StaticResource DialogTextBlockStyle}"
                                   Text="{x:Static p:Resources.Yes}"/>
                    </Button>

                    <Button x:Name="NoButton"
                            Style="{StaticResource WindowButtonDialogStyle}"
                            Click="NoButton_OnClick">
                        <!-- No -->
                        <TextBlock Style="{StaticResource DialogTextBlockStyle}"
                                   Text="{x:Static p:Resources.No}"/>
                    </Button>

                    <Button x:Name="OkButton"
                            Style="{StaticResource WindowButtonDialogStyle}"
                            Click="OkButton_OnClick">
                        <!-- Ok -->
                        <TextBlock Style="{StaticResource DialogTextBlockStyle}"
                                   Text="{x:Static p:Resources.Ok}"/>
                    </Button>

                    <Button x:Name="CancelButton"
                            Style="{StaticResource WindowButtonDialogStyle}"
                            Click="CancelButton_OnClick">
                        <!-- Cancel -->
                        <TextBlock Style="{StaticResource DialogTextBlockStyle}"
                                   Text="{x:Static p:Resources.Cancel}"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>



